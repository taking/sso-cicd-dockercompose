# taking
# github.com/taking
#
version: '3.8'
services:
  mariadb:
    image: 'linuxserver/mariadb:latest'
    container_name: 'MariaDB'
    ports:
      - '3306:3306'
    volumes:
      - './mariadb_data:/config'
    env_file:
      - ./.env
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Seoul
    restart: unless-stopped
#
#
  phpmyadmin:
    image: 'phpmyadmin/phpmyadmin:latest'
    container_name: 'phpMyAdmin'
    ports:
      - '10012:80'
    links:
      - mariadb
    environment:
      - PMA_ARBITRARY=1
      - PMA_HOST=mariadb
    restart: unless-stopped
#
#
  redis:
    image: 'bitnami/redis:latest'
    container_name: 'Redis'
#   ports:
    env_file:
      - ./.env
    restart: unless-stopped
#
#
  nextcloud:
    image: 'linuxserver/nextcloud:latest'
    container_name: 'Nextcloud'
    ports:
      - '10011:443'
    volumes:
      - './nextcloud_data/appdata:/config'
      - './nextcloud_data/data:/data'
    depends_on:
      - mariadb
      - redis
    environment:
      - PUID=1000
      - PGID=1000
      - TZ=Asia/Seoul
    restart: unless-stopped
#
#
  jenkins:
    build:
      context: ./dockerfiles
      dockerfile: jenkins-openjdk8-maven-docker
#    image: 'jenkins/jenkins:jdk11'
    container_name: 'jenkins-jdk8-mvn-docker'
    ports:
      - '10013:8080'
      - '50000:50000'
    volumes:
      - './jenkins_data:/var/jenkins_home'
      - '/var/run/docker.sock:/var/run/docker.sock'
    privileged: true
    restart: unless-stopped
#
#
  sonarqube:
    image: 'sonarqube:latest'
    container_name: 'sonarqube'
    ports:
      - '10014:9000'
      - '9092:9092'
    env_file:
      - ./.env
    environment:
      - SONARQUBE_HOME=/opt/sonarqube
      - SONARQUBE_JDBC_URL=jdbc:postgresql://postgres:5432/sonar
    volumes:
      - './sonarqube_data/conf:/opt/sonarqube/conf'
      - './sonarqube_data/data:/opt/sonarqube/data'
      - './sonarqube_data/logs:/opt/sonarqube/logs'
      - './sonarqube_data/extensions:/opt/sonarqube/extensions'
      - './sonarqube_data/bundled-plugins:/opt/sonarqube/lib/bundled-plugins'
    depends_on:
     - postgres
#    privileged: true
    restart: unless-stopped
#
#
  postgres:
    image: postgres
    container_name: 'postgres'
    volumes:
      - ./postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    restart: unless-stopped
#        
#
  keycloak:
    image: quay.io/keycloak/keycloak:latest
    container_name: 'keycloak'
    env_file:
      - ./.env
      #JDBC_PARAMS: "ssl=true"
    ports:
      - 10010:8080
    depends_on:
      - postgres
    restart: unless-stopped
